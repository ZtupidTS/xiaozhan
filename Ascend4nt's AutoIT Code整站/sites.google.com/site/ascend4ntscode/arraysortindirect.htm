<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0061)http://sites.google.com/site/ascend4ntscode/arraysortindirect -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { // Input 0
var a=window;
// Input 1
var b="start";function d(f){this.t={};this.tick=function(g,h,c){c=c?c:(new Date).getTime();this.t[g]=[c,h]};this.tick(b,null,f)}var e=new d;a.jstiming={Timer:d,load:e};try{var i=null;if(a.chrome&&a.chrome.csi)i=Math.floor(a.chrome.csi().pageT);if(i==null)if(a.gtbExternal)i=a.gtbExternal.pageT();if(i==null)if(a.external)i=a.external.pageT;if(i)a.jstiming.pt=i}catch(j){};
// Input 2
})()
</script>
<link rel="shortcut icon" href="../../../www.gstatic.com/sites/p/8c5068/system/app/images/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="../../../www.gstatic.com/sites/p/8c5068/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e=parseInt,h=window,i="length";function j(a){return document.getElementById(a)}h.byId=j;var k="";function l(a){return a.replace(/^\s+|\s+$/g,k)}h.trim=l;
var m="MSIE",n="6.0",o="string",p='id="',q='" ',r='class="',s='title="',t="display:inline-block;",u="left",v="float:left;",w="right",x="float:right;",y="cursor:hand;",z="<span ",A=' style="width:',B="px; height:",C="px;",D=";padding: 0;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='",E="', sizingMethod='scale');\"></span><span style=\"padding: ",F=" ",G=";",H="float:",I='"></span>';
h.ie6ImgFix=function(a){var b=h.navigator?navigator.userAgent:k;if(b.indexOf(m)!=-1&&typeof opera=="undefined"){var d=/MSIE\s+([^\);]+)(\)|;)/;d.test(b);b=RegExp.$1;if(b==n){var c=typeof a==o?j(a):a;a=c.id?p+c.id+q:k;b=c.className?r+c.className+q:k;d=c.title?s+c.title+q:s+c.alt+q;var f=t+c.style.cssText;if(c.align==u)f=v+f;if(c.align==w)f=x+f;if(c.parentElement.href)f=y+f;var g=c.currentStyle,L=c.width-e(g.paddingLeft,10)-e(g.paddingRight,10),M=c.height-e(g.paddingTop,10)-e(g.paddingBottom,10),N=
z+a+b+d+A+L+B+M+C+f+D+c.src+E+g.paddingTop+F+g.paddingRight+F+g.paddingBottom+F+g.paddingLeft+G+(g.styleFloat?H+g.styleFloat+G:k)+I;h.setTimeout(function(){c.outerHTML=N},1)}}};var J=[],K=0;h.JOT_addListener=function(a,b,d){var c=new String(K++);a={eventName:a,handler:b,compId:d,key:c};J.push(a);return c};h.JOT_removeListenerByKey=function(a){for(var b=0;b<J[i];b++)if(J[b].key==a){J.splice(b,1);break}};
h.JOT_removeAllListenersForName=function(a){for(var b=0;b<J[i];b++)J[b].eventName==a&&J.splice(b,1)};var O="function";h.JOT_postEvent=function(a,b,d){var c={eventName:a,eventSrc:b||{},payload:d||{}};if(h.JOT_fullyLoaded){b=J[i];for(d=0;d<b&&d<J[i];d++){var f=J[d];if(f&&f.eventName==a){c.listenerCompId=f.compId||k;(f=typeof f.handler==O?f.handler:h[f.handler])&&f(c)}}}else h.JOT_delayedEvents.push({eventName:a,eventSrc:b,payload:d})};h.JOT_delayedEvents=[];h.JOT_fullyLoaded=false;var P="__duration__";
h.JOT_formatRelativeToNow=function(a,b){a=((new Date).getTime()-a)/6E4;if(a>=1440||a<0)return null;var d=0;if(a>=60){a/=60;d=2}a>=2&&d++;return b?h.JOT_siteRelTimeStrs[d].replace(P,Math.floor(a)):h.JOT_userRelTimeStrs[d].replace(P,Math.floor(a))}; })()
</script>
<script>


var webspace = {"signInUrl":"../../../https@www.google.com\a\universallogin@continue=http_253a_252f_252fsites.google.com_252fsite_252fascend4ntscode_252farraysortindirect&service=jotspot","isGaiaBarRendered":true,"isConsumer":true,"termsUrl":"../../../www.google.com/sites/help/intl/en/terms.html","enableAnalytics":true,"homePath":"/","sharingPolicy":"OPENED","isAdsenseEnabled":true,"analyticsAccountId":"UA-10188299-2","baseUri":"default.htm","name":"ascend4ntscode","features":{"lazySiteHierarchy":true,"subpageNav":false,"multipleCalendar":true,"enableNewBrowserEditChecks":true,"useStandardEmbedsInSidebar":false,"experimental":{"displayEditorLockExceptions":false},"navadminperf":false,"structuredDataSchemas":false,"kixEmbedSupport":true},"domain":"defaultdomain","adsensePublisherId":null,"isStartPageEnabled":false,"domainAnalyticsAccountId":"","siteTitle":"Ascend4nt's AutoIT Code"};


webspace.gadgets = {"isGadgetDirectoryEnabled":true,"baseUri":"system/app/pages/gadgets","isGgsRenderingEnabled":true};


webspace.user = {"uid":"","hasAdminAccess":false,"guest_":true,"domain":"","hasWriteAccess":false,"userName":"guest","dasherUser":false,"primaryEmail":"guest","displayNameOrEmail":"guest"};

webspace.page = {"canDeleteWebspace":null,"locale":"en","state":"","wuid":"wuid:gx:33225ec9cbebefd0","timeZone":"Asia/Hong_Kong","properties":{},"type":"text","canChangePath":true,"parentWuid":null,"revision":6,"title":"_ArraySortIndirect","isRtlLocale":false,"bidiEnabled":false,"siteLocale":"en","name":"arraysortindirect","path":"../../arraysortindirect","isSiteRtlLocale":false,"parentPath":null};


var editorResources = [
  '../../../www.gstatic.com/sites/p/8c5068/system/js/trog_edit__en.js',
  '../../../www.gstatic.com/sites/p/8c5068/system/app/css/trogedit.css',
  '_/rsrc/1270087590375/system/app/css/editor.css'
];

var JOT_clearDotPath = '../../../www.gstatic.com/sites/p/8c5068/system/app/images/cleardot.gif';


var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];


webspace.page.currentTemplate = {"title":"Web Page","path":"../../system/app/pagetemplates/text"};





var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="Description" content="My AutoIT code source" />
<style type="text/css">#body .goog-menuitem .sites-moreactions-icon {
margin-top: 0;
}

/* Not sure exactly why, but I found that in the presence of position: relative
(css) we need to trigger IE's internal, proprietary "hasLayout" mode in order
to render correctly.  This is for all the zoom: 1 (css) in the file. */
#body #sites-page-toolbar {
zoom: 1;
position: relative;
}

/* (midoringo) fixes b1471374 rule for toolbar to show correctly in RTL for IE6 */
/* Don't know what exactly this fix the problem. */
#sites-page-toolbar #sites-page-info-bar {
/* position: static; */
zoom: 1;
}

/* rule for toolbar's border-bottom to show correctly in RTL for IE6 */
#sites-collaborator-bar{
position: relative;
}

#sites-searchbox-search-button{
height: 21px;
}

#sites-searchbox-select-button-wrapper{
height: 21px;
}

#body .sites-attachment-icon,
#body .sites-comment-icon {
font-size: 1px !important;
}

/* trigger layout, otherwise the bgcolor on the comments area only fills to halfway down */
#body #sites-comment-wrapper,
#body #sites-attachment-wrapper {
zoom: 1;
}

#body .sites-button-icon {
margin-right: 5px;
}

/* (midoringo) This fixes bug 1867401, seems like position: static fixes some */
/* IE RTL problem, but I don't know how exactly this fix the problem. */
#body .modal-dialog-title {
/* position: static; */
zoom: 1;
}

#body .modal-dialog-content {
height: 1%;
}

#body .goog-sites-pagefinder hr {
clear: both;
}

#body .goog-sites-pagefinder .goog-tabpane {
height: 225px;
}

#body .modal-dialog .goog-ws-logo {
width: 400px;
}

#body .goog-button-base {
margin-left: 2px;
margin-right: 2px;
}

#body .sites-filecab-icon-delete {
height: 20px;
background-position: 0 2px;
}

#body .sites-filecab-icon-folder {
height: 20px;
background-position: 0 2px;
}

#body .sites-filecab-icon-new {
height: 20px;
background-position: 0 2px;
}

#body .sites-toolbar-icon-new {
height: 20px;
background-position: 0 2px;
}

#body .sites-toolbar-icon-edit {
height: 20px;
background-position: -13px 2px;
}

#body .sites-toolbar-icon-more-actions {
height: 20px;
margin: 0;
}

#body .sites-format-menu {
/* IE 6 hack - otherwise it renders the menu at 100% screen width for some
reason */
_width: 20em;
}

.sites-format-menu .goog-menuitem-rtl {
width: 150px;
}

.sites-menu-insert .goog-menuitem-rtl{
width: 200px;
}

.sites-format-submenu .goog-menuitem-rtl {
width: 60px;
}

.sites-insert-submenu .goog-menuitem-rtl{
width: 100px;
}

.sites-menu-layout .goog-menuitem-rtl{
width: 15em;
}

/* This is fix for bug 1891361 in the IE6 portion, This allows the icon in the
MenuItem to display correctly on the right side. */
#body .goog-toolbar-menu-item-icon {
_position: static;
}

#body .announcements .announcement .postfooter p {
margin: 0;
padding: 0 0 15px;
}

#body .filecabinet .filecabinet-table {
border-collapse: collapse;
}

#body .announcements {
zoom: 1;
}

/* Fix for bug 1902901, parts of the list page are rendered off screen for
IE RTL.  This fixes the position: relative used by the layout */
#body .sites-list-showing-items,
#body #sites-list-controls,
#body .list-page {
zoom: 1;
}

/* Fix for bug 1902397, float right causes text to shift out of bound of the
containing <a> */
#body .sites-list-sort-button {
float: none;
}

#addPageElementEl .goog-ws-add {
margin-right: 12px;
}

#body .lp-createpage-tree {
height: 202px;
}

.sitelayout-dlg-img-container {
zoom: 1;
}

.sites-sidebar-nav li {
zoom: 1;
}

.nav-toc-content li {
zoom: 1;
}

td.sites-copy-cell-name {
padding: 6px 10px 0 10px;
}

td.sites-copy-cell {
padding-top: 6px;
}

/*hack to fix the collaborator bar gradient for ie */
#sites-page-toolbar {
position: relative;
z-index: 101;
}


/* Both IE6 and IE7 look at the css rule border-bottom-width: 0 and use
* width: 1px instead... fortunately IE7 knows what border-color: transparent
* means, so it doesn't have ugly border allover.  This rule targets nav in IE6
* and set border-width to 0px to get rid of the problem.
*/
#body .sites-sidebar-nav li,
#body .sites-sidebar-nav div,
#body .sites-sidebar-nav a {
_border-bottom-width: 0px !important;
}

.sites-clear {
zoom: 1;        /* triggers hasLayout */
display: block; /* resets display for IE/Win */
}
</style>
<link rel="stylesheet" type="text/css" href="../../../www.gstatic.com/sites/p/8c5068/system/app/themes/slate/standard-css-slate-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="_/rsrc/1270087590415/system/app/css/overlay.css@cb=slate170goog-ws-left.css" />
<title>_ArraySortIndirect (Ascend4nt's AutoIT Code)</title>
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>

<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en">
<div id="sites-page-toolbar">
<div id="sites-status" class="sites-status" style="display:none;">
<div id="sites-notice" class="sites-notice"> </div>
</div>
</div>
<div id="sites-chrome-everything" style="direction: ltr">
<div id="sites-chrome-page-wrapper">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0">
<tr class="sites-header-primary-row">
<td id="sites-header-title">
<h2><a href="default.htm" dir="ltr">Ascend4nt's AutoIT Code</a></h2>
</td>
<td class="sites-layout-searchbox">
<div>
<form id="sites-searchbox-form" action="/site/ascend4ntscode/system/app/pages/search">
<input type="text" onpropertychange="JOT_setTextDir(this)" oninput="JOT_setTextDir(this)" dir="" id="jot-ui-searchInput" name="q" size="20" />
<input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" />
<div class="goog-inline-block goog-button goog-button-base   "><div class="goog-inline-block goog-button-base-outer-box"><div class="goog-inline-block goog-button-base-inner-box"><div class="goog-button-base-pos"><div class="goog-button-base-top-shadow"> </div><div id="sites-searchbox-search-button" class="goog-button-base-content " style="" onclick=""><span id="sites-searchbox-search-button-label">Search this site</span></div></div></div></div></div>
</form>
</div>
</td>
</tr>
</table> 
</div> 
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_2bd" class="sites-embed">
<div class="sites-embed-content sites-sidebar-nav ">
<ul jotId="navList">
<li class="topLevel nav-first"><div dir="ltr" style="padding-left: 19px;"><a href="home/default.htm" jotId="wuid:gx:3e0bfbf64d02f7bd" class="topLevel">Ascend4nt's AutoIT Code</a>
</div></li>
<li class="topLevel"><div class="current-bg" jotId="wuid:gx:33225ec9cbebefd0" dir="ltr" style="padding-left: 19px;">_ArraySortIndirect
</div></li>
<li class="topLevel parent" wuid="gx:7367f77e4722ca7c"><div dir="ltr" style="padding-left: 0px;"><div class="expander"></div><a href="clipgethtml/default.htm" jotId="wuid:gx:7367f77e4722ca7c" class="topLevel">_ClipGetHTML</a>
</div><ul>
<li class=""><div dir="ltr" style="padding-left: 38px;"><a href="clipgethtml/htmlclipboardmonitor.htm" jotId="wuid:gx:31ba070512d79f64">HTMLClipboardMonitor</a>
</div></li>
</ul>
</li>
<li class="topLevel parent" wuid="gx:6b71d77e5da91118"><div dir="ltr" style="padding-left: 0px;"><div class="expander"></div><a href="clipputhtml/default.htm" jotId="wuid:gx:6b71d77e5da91118" class="topLevel">_ClipPutHTML</a>
</div><ul>
<li class=""><div dir="ltr" style="padding-left: 38px;"><a href="clipputhtml/hyperlinkputexample.htm" jotId="wuid:gx:1b03857ed9607985">HyperLinkPutExample</a>
</div></li>
<li class=""><div dir="ltr" style="padding-left: 38px;"><a href="clipputhtml/puthtmlexample.htm" jotId="wuid:gx:2a5ec4491a7f4d49">PutHTMLExample</a>
</div></li>
</ul>
</li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="clipputhyperlink.htm" jotId="wuid:gx:18588c2947597699" class="topLevel">_ClipPutHyperlink</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="home/crosshairs.htm" jotId="wuid:gx:17790663940aaf0f" class="topLevel">CrossHairs (Full-Screen)</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="dllstructdisplay.htm" jotId="wuid:gx:6f676835b2fa48d8" class="topLevel">_DLLStructDisplay</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="doswildcardstopcregex.htm" jotId="wuid:gx:770f1b424276600e" class="topLevel">_DOSWildcardsToPCRegEx</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="enumchildwindows.htm" jotId="wuid:gx:1a0c75e23eda41b7" class="topLevel">_EnumChildWindows</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="guibox.htm" jotId="wuid:gx:62a67732b3c60a79" class="topLevel">_GUIBox</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="winapifilefind.htm" jotId="wuid:gx:792ed10785ac95ef" class="topLevel">_WinAPI_FileFind</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="winapi_getsysteminfo.htm" jotId="wuid:gx:593d5f86aa661489" class="topLevel">_WinAPI_GetSystemInfo</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="winapi_processgetcreatetime.htm" jotId="wuid:gx:7d305b7e7335ec2a" class="topLevel">_WinAPI_ProcessGetCreateTime</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="winapi_processgetfilename.htm" jotId="wuid:gx:5cb01b89736c55ff" class="topLevel">_WinAPI_ProcessGetFileName</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="winapi_processgetpathname.htm" jotId="wuid:gx:87dbf73f0c12f0c" class="topLevel">_WinAPI_ProcessGetPathname</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="wingetalttabwinlist.htm" jotId="wuid:gx:54b9169eaaceb1e6" class="topLevel">_WinGetAltTabWinList</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="fullscreencrashrecovery.htm" jotId="wuid:gx:782a3c1a874782e3" class="topLevel">FullScreenCrashRecovery</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="contactme.htm" jotId="wuid:gx:35605b72df1045cc" class="topLevel">ContactMe</a>
</div></li>
<li class="topLevel"><div dir="ltr" style="padding-left: 19px;"><a href="system/app/pages/sitemap/hierarchy.htm" jotId="wuid:gx:26461de712069f2b" class="topLevel">Sitemap</a>
</div></li>
</ul>

</div>
</div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
</div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr">_ArraySortIndirect</span>
</h3>

<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr">I was looking for a way to implement a good sort algorithm that didn't actually 
move the data in my arrays around. Instead, I wanted a 2nd array, or even a 2nd 
*column* to be used for that purpose. That's how _ArraySortIndirect came about. 
While looking through my Algorithms book, I figured 'QuickSort' was a good idea 
to implement - but how about that, _ArraySort() already uses QuickSort, and even 
optimizes to use InsertionSort when necessary. I was pretty happy about that, 
since I'd have very little to do to implement what I had in mind.<br /><br />In any 
case, here's what's needed:<br />1 array of indexes<br />1 array of data to be 
'indirectly' sorted<br /><br />Simplest way to do this is to 'Dim' a 2nd array to be 
the size of the array-to-sort, then let this function do an 'initialize indexes' 
routine to set the indexes to be n-to-z. After the function call, the indexes 
array will be sorted, the data array will be untouched.<br /><br />Now, to access 
the data in the data array, you'll need to do a double-lookup, as in 
$aDataArray[$aIndexArray[$i]], but that can be a bit more convenient a possibly 
time-saving than resorting an entire 2Dimensional array. (it's slower on 
one-dimensional arrays, but not by a big margin)<br /><br />The second option would 
be an in-array 2D indirect sort. This means one column is the 'index' column, 
and the rest are Data columns. Accessing it would be the same, except a second 
subscript would be needed for the Data columns. This method of sorting is slower 
than indirect sorting, but saves you an extra array. Its up to you what you feel 
like using.<br /><br />
<b style="color:rgb(180, 95, 6)"><font size="3">Ascend4nt's AutoIT Code License agreement:</font></b><br />
<b><i>
</i></b><i>While I provide this source code freely, if you do use the code in your projects, all I ask is that:</i><br />
<ol><li>
 If you provide source, keep the header as I have put it, OR, if you
expand it, then at least acknowledge me as the original author, and any other authors I credit<br />
</li><li>
 If the program is released, acknowledge me in your credits (it
doesn't have to state which functions came from me, though  again if
the source is provided - see #1)</li><li>The source <u>on it's own</u> (as opposed to part of a <i>project</i>) can <i>not</i> be posted unless a link to the page(s) where the code were retrieved from is provided and a message stating that the latest updates will be available on the page(s) linked to.</li><li>Pieces of the code can however be discussed on the threads where 
Ascend4nt has posted the code without worrying about further linking.</li></ol><br /><font size="5" style="color:rgb(56, 118, 29)">- Example usage CODE STARTS HERE -</font><br /><br />#include &lt;Array.au3&gt;<br />#include &lt;_ArraySortIndirect.au3&gt;<br /><br />Local $iTimer<br />Dim $aRandomNumArray1D[400]<br />Dim $aRandomNumArray2D[400][4]<br />Dim $aSortedIndexes[400]<br /><br />For $i=1 To 399<br />    ; Put same random value in each array (in column 3 for 2D array)<br />    $aRandomNumArray2D[$i][2]=Random(10,1000,1) <br />    $aRandomNumArray1D[$i]=$aRandomNumArray2D[$i][2]<br />Next<br /><br />; Indirect 2D sort<br />$iTimer=TimerInit()<br />_ArraySortIndirect($aRandomNumArray2D,$aSortedIndexes,0,1,1,-1,2,True)<br />ConsoleWrite("Indirect 2D sort time:"&amp;TimerDiff($iTimer)&amp;" ms"&amp;@CRLF)<br /><br /><br />For $i=1 To 399<br />    ; Set the 2D array's 1st column to show sorted indirect indexes <br />    $aRandomNumArray2D[$i][0]=$aSortedIndexes[$i]<br />    ; Set the 2D array's 4th column to reflect correct order<br />    $aRandomNumArray2D[$i][3]=$aRandomNumArray2D[$aSortedIndexes[$i]][2]<br />Next<br /><br />; Indirect 1D sort<br />$iTimer=TimerInit()<br />_ArraySortIndirect($aRandomNumArray1D,$aSortedIndexes,0,1,1)<br />ConsoleWrite("Indirect 1D sort time:"&amp;TimerDiff($iTimer)&amp;" ms"&amp;@CRLF)<br /><br />For $i=1 To 399<br />    ; Set the 2nd column of the 2D array to show sorted indirect indexes for 1D array of same values<br />    $aRandomNumArray2D[$i][1]=$aSortedIndexes[$i]<br />Next<br />; Set 'Headers'<br />$aRandomNumArray2D[0][0] = "Sorted 2D indexes"<br />$aRandomNumArray2D[0][1] = "Sorted 1D indexes"<br />$aRandomNumArray2D[0][2] = "Original unsorted values"<br />$aRandomNumArray2D[0][3] = "Values in sorted order"<br /><br />_ArrayDisplay($aRandomNumArray2D,"_ArraySortIndirect Results")<br /><br /><br />; In-array indirect sort<br />$iTimer=TimerInit()<br />_ArraySortIndexes($aRandomNumArray2D,0,1,-1,0,2)<br />ConsoleWrite("In-array indirect sort time:"&amp;TimerDiff($iTimer)&amp;" ms"&amp;@CRLF)<br /><br />_ArrayDisplay($aRandomNumArray2D,"_ArraySortIndexes [in-array sort] Results")<br /><br />; *Direct* _ArraySort() routines comparison:<br />$iTimer=TimerInit()<br />_ArraySort($aRandomNumArray2D,0,1,UBound($aRandomNumArray2D)-1,2)<br />ConsoleWrite("_ArraySort 2D time:"&amp;TimerDiff($iTimer)&amp;" ms"&amp;@CRLF)<br /><br />$iTimer=TimerInit()<br />_ArraySort($aRandomNumArray1D,0,1)<br />ConsoleWrite("_ArraySort 1D time:"&amp;TimerDiff($iTimer)&amp;" ms"&amp;@CRLF)<br /><br /><br /><b style="background-color:rgb(0, 0, 0);color:rgb(56, 118, 29)"><font size="5">- _ArraySortIndirect.au3 CODE STARTS HERE -</font></b><br /><br />#include-once<br />;#include &lt;Array.au3&gt;        ; _ArrayReverse() [plopped it right into the function instead]<br /><br />; ===============================================================================================================================<br />; &lt;_ArraySortIndirect.au3&gt;<br />;<br />; Simple function(s) to 'sort' an array, indirectly.  In other words - it doesn't move data in the array around,<br />;    but instead moves indexes to the array around. (The array of course must match the # of items to be sorted)<br />;<br />; Functions:<br />;    _ArraySortIndirect()    ; indirect index sort: 1 1D array is Indexes, another array is Data<br />;                            ;    The Data isn't moved, but the Indexes are put in-order<br />;    _ArraySortIndexes()        ; in-array indirect index sort: a single 2D array with an Indexes Column<br />;                            ;    The entire row/data isn't moved, only the Indexes column is rearranged<br />;<br />; Internal DO-NOT-USE functions:<br />;    __ArrayQuickSortIndirect1D()<br />;    __ArrayQuickSortIndirect2D()<br />;    __ArrayQuickSortIndexes()<br />;<br />; See Also:<br />;    &lt;_LinkedListFunctions.au3&gt;    ; _LL_SortData() utilizes _ArraySortIndirect()<br />;    &lt;_ArraySortIndirectwHistory.au3&gt;    ; (with history)<br />;    &lt;_LinkedListFunctionswHistory.au3&gt;    ; (with history)<br />;<br />; Author: Ascend4nt*<br />;    *modified from v3.3 _ArraySort() UDF (and helper function), and _ArrayReverse() UDF code - authors of those:<br />;    _ArraySort() &amp; __ArrayQuickSort1D() helper function: Jos van der Zande, LazyCoder, Tylo, Ultima<br />;    _ArrayReverse(): Brian Keene, Jos van der Zande, Tylo, Ultima<br />; ===============================================================================================================================<br /><br />; ===============================================================================================================================<br />; Func _ArraySortIndirect(Const ByRef $aArrayToSort,ByRef $aIndexArray,$iDescending=0,$iDataStart=0, _<br />;    $iIndexStart=0,$iIndexEnd=-1,$iColumn=0,$bInitializeIndexes=True)<br />;<br />; Sorts an array of indexes that point to another array, while avoiding reordering of the main array.<br />;<br />; $aArrayToSort = the 1D or 2D array containing data that will be the basis of indirect reordering<br />; $aIndexArray = 1D array of indexes pointing into $aArrayToSort. This is the array that will be adjusted<br />; $iDescending = if non-zero, sorts in Descending order, otherwise it sorts in Ascending order<br />; $iDataStart = start point in $aArrayToSort (where sort compares begin) - needed when $bInitializeIndexes is TRUE<br />;     NOTE: set to 0 if $bInitializeIndexes is FALSE<br />;  *END point in $aArrayToSort [when $bInitializeIndexes is TRUE] is determined automatically by the<br />;    computed value of $iIndexEnd-$iIndexStart+1<br />; $iIndexStart = start point in $aIndexArray (where sorting begins)<br />; $iIndexEnd = end point in $aIndexArray (where sorting stops)<br />; $iColumn = [only used for 2D arrays]: column in 2D array to look at for sorting purposes<br />; $bInitializeIndexes = If TRUE, 1st initializes the $aIndexArray with sequential incrementing indexes, preparing<br />;    it for sorting<br />;<br />; Returns:<br />;    Success: True, with $aIndexArray now containing a sorted list<br />;    Failure: False, with @error = 1 (invalid params)<br />;<br />; Author: Ascend4nt, modified from v3.3 _ArraySort() UDF and _ArrayReverse() UDF code - authors of those:<br />;    _ArraySort(): Jos van der Zande, LazyCoder, Tylo, Ultima<br />;    _ArrayReverse(): Brian Keene, Jos van der Zande, Tylo, Ultima<br />; ===============================================================================================================================<br /><br />Func _ArraySortIndirect(Const ByRef $aArrayToSort,ByRef $aIndexArray,$iDescending=0,$iDataStart=0, _<br />    $iIndexStart=0,$iIndexEnd=-1,$iColumn=0,$bInitializeIndexes=True)<br />    <br />    If Not IsArray($aArrayToSort) Or Not IsArray($aIndexArray) Or UBound($aIndexArray,0)&gt;1 Then Return SetError(1,0,False)<br />    <br />    If $iIndexEnd=-1 Then $iIndexEnd=UBound($aIndexArray)-1<br />    <br />    If $iIndexStart&lt;0 Or $iIndexStart&gt;$iIndexEnd Or $iIndexEnd&gt;UBound($aIndexArray)-1 Then Return SetError(1,0,False)<br />    If $iDataStart&lt;0 Or $iDataStart+($iIndexEnd-$iIndexStart)&gt;UBound($aArrayToSort)-1 Then Return SetError(1,0,False)<br />    <br />    If $bInitializeIndexes Then<br />        Local $iDest=$iDataStart<br />        For $i=$iIndexStart To $iIndexEnd<br />            $aIndexArray[$i]=$iDest<br />            $iDest+=1<br />        Next<br />    EndIf<br /><br />    ; Sort<br />    Switch UBound($aArrayToSort, 0)<br />        Case 1<br />            __ArrayQuickSortIndirect1D($aArrayToSort,$aIndexArray,$iIndexStart,$iIndexEnd)<br />        Case 2<br />            If $iColumn&lt;0 Or $iColumn&gt;UBound($aArrayToSort,2)-1 Then Return SetError(1,0,False)<br />            __ArrayQuickSortIndirect2D($aArrayToSort,$aIndexArray,$iIndexStart,$iIndexEnd,$iColumn)<br />        Case Else<br />            Return SetError(1,0,False)<br />    EndSwitch<br />    ;If $iDescending Then _ArrayReverse($aIndexArray,$iIndexStart,$iIndexEnd)<br />    ; _ArrayReverse() code pulled out:<br />    If $iDescending Then<br />        Local $vTmp<br />        ; Reverse<br />        For $i = $iIndexStart To Int(($iIndexStart + $iIndexEnd - 1) / 2)<br />            $vTmp = $aIndexArray[$i]<br />            $aIndexArray[$i] = $aIndexArray[$iIndexEnd]<br />            $aIndexArray[$iIndexEnd] = $vTmp<br />            $iIndexEnd -= 1<br />        Next<br />    EndIf<br />    Return True    <br />EndFunc<br /><br />; ===============================================================================================================================<br />; Func __ArrayQuickSortIndirect1D(Const ByRef $aArrayToSort,ByRef $aIndexArray,ByRef $iStart,ByRef $iEnd)<br />;<br />; Helper function for _ArraySortIndirect(). This is a modified version of __ArrayQuickSort1D().<br />;<br />; $aArrayToSort = the array to base sorting on<br />; $aIndexArray = the array of indexes (into $aArrayToSort) to sort<br />; $iStart = index in $aIndexArray to start sorting at<br />; $iEnd = index in $aIndexArray to stop sorting at<br />;<br />; Returns: Nothing<br />;<br />; Author: Ascend4nt, modified from v3.3 _ArraySort() UDF helper function __ArrayQuickSort1D() - authors of that:<br />;        Jos van der Zande, LazyCoder, Tylo, Ultima<br />; ===============================================================================================================================<br /><br />Func __ArrayQuickSortIndirect1D(Const ByRef $aArrayToSort,ByRef $aIndexArray,ByRef $iStart,ByRef $iEnd)<br />    If $iEnd &lt;= $iStart Then Return<br /><br />    Local $vTmp<br />    ; InsertionSort (faster for smaller segments)<br />    If ($iEnd - $iStart) &lt; 15 Then<br />        Local $i,$j,$vCur,$iTmp<br />        For $i = $iStart + 1 To $iEnd<br />            $iTmp=$aIndexArray[$i]<br />            $vTmp = $aArrayToSort[$iTmp]            <br /><br />            If IsNumber($vTmp) Then<br />                For $j = $i - 1 To $iStart Step -1<br />                    $vCur = $aArrayToSort[$aIndexArray[$j]]<br />                    ; If $vTmp &gt;= $vCur Then ExitLoop<br />                    If ($vTmp &gt;= $vCur And IsNumber($vCur)) Or (Not IsNumber($vCur) And StringCompare($vTmp, $vCur) &gt;= 0) Then ExitLoop<br />                    $aIndexArray[$j + 1] = $aIndexArray[$j]<br />                Next<br />            Else<br />                For $j = $i - 1 To $iStart Step -1<br />                    If (StringCompare($vTmp, $aArrayToSort[$aIndexArray[$j]]) &gt;= 0) Then ExitLoop<br />                    $aIndexArray[$j + 1] = $aIndexArray[$j]<br />                Next<br />            EndIf<br /><br />            $aIndexArray[$j + 1] = $iTmp<br />        Next<br />        Return<br />    EndIf<br /><br />    ; QuickSort<br />    Local $L = $iStart, $R = $iEnd, $vPivot = $aArrayToSort[$aIndexArray[Int(($iStart + $iEnd) / 2)]], $fNum = IsNumber($vPivot)<br />    Do<br />        If $fNum Then<br />            ; While $avArray[$L] &lt; $vPivot<br />            While ($aArrayToSort[$aIndexArray[$L]] &lt; $vPivot And IsNumber($aArrayToSort[$aIndexArray[$L]])) Or (Not IsNumber($aArrayToSort[$aIndexArray[$L]]) And StringCompare($aArrayToSort[$aIndexArray[$L]], $vPivot) &lt; 0)<br />                $L += 1<br />            WEnd<br />            ; While $avArray[$R] &gt; $vPivot<br />            While ($aArrayToSort[$aIndexArray[$R]] &gt; $vPivot And IsNumber($aArrayToSort[$aIndexArray[$R]])) Or (Not IsNumber($aArrayToSort[$aIndexArray[$R]]) And StringCompare($aArrayToSort[$aIndexArray[$R]], $vPivot) &gt; 0)<br />                $R -= 1<br />            WEnd<br />        Else<br />            While (StringCompare($aArrayToSort[$aIndexArray[$L]], $vPivot) &lt; 0)<br />                $L += 1<br />            WEnd<br />            While (StringCompare($aArrayToSort[$aIndexArray[$R]], $vPivot) &gt; 0)<br />                $R -= 1<br />            WEnd<br />        EndIf<br /><br />        ; Swap<br />        If $L &lt;= $R Then<br />            $vTmp=$aIndexArray[$L]<br />            $aIndexArray[$L]=$aIndexArray[$R]<br />            $aIndexArray[$R]=$vTmp<br />            $L+=1<br />            $R-=1<br />        EndIf<br />    Until $L &gt; $R<br /><br />    __ArrayQuickSortIndirect1D($aArrayToSort,$aIndexArray,$iStart,$R)<br />    __ArrayQuickSortIndirect1D($aArrayToSort,$aIndexArray,$L,$iEnd)    <br />EndFunc<br /><br />; ===============================================================================================================================<br />; Func __ArrayQuickSortIndirect2D(Const ByRef $aArrayToSort,ByRef $aIndexArray,ByRef $iStart,ByRef $iEnd, ByRef $iColumn)<br />;<br />; Helper function for _ArraySortIndirect(). This is a modified version of __ArrayQuickSort1D().<br />;<br />; $aArrayToSort = the 2D array to base sorting on<br />; $aIndexArray = the array of indexes (into $aArrayToSort) to sort<br />; $iStart = index in $aIndexArray to start sorting at<br />; $iEnd = index in $aIndexArray to stop sorting at<br />; $iColumn = column of 2D $aArrayToSort in which comparisons are based on<br />;<br />; Returns: Nothing<br />;<br />; Author: Ascend4nt, modified from v3.3 _ArraySort() UDF helper function __ArrayQuickSort1D() - authors of that:<br />;        Jos van der Zande, LazyCoder, Tylo, Ultima<br />; ===============================================================================================================================<br /><br />Func __ArrayQuickSortIndirect2D(Const ByRef $aArrayToSort,ByRef $aIndexArray,ByRef $iStart,ByRef $iEnd,ByRef $iColumn)<br />    If $iEnd &lt;= $iStart Then Return<br /><br />    Local $vTmp<br />    ; InsertionSort (faster for smaller segments)<br />    If ($iEnd - $iStart) &lt; 15 Then<br />        Local $i,$j,$vCur,$iTmp<br />        For $i = $iStart + 1 To $iEnd<br />            $iTmp=$aIndexArray[$i]<br />            $vTmp=$aArrayToSort[$iTmp][$iColumn]            <br /><br />            If IsNumber($vTmp) Then<br />                For $j = $i - 1 To $iStart Step -1<br />                    $vCur = $aArrayToSort[$aIndexArray[$j]][$iColumn]<br />                    ; If $vTmp &gt;= $vCur Then ExitLoop<br />                    If ($vTmp &gt;= $vCur And IsNumber($vCur)) Or (Not IsNumber($vCur) And StringCompare($vTmp, $vCur) &gt;= 0) Then ExitLoop<br />                    $aIndexArray[$j + 1] = $aIndexArray[$j]<br />                Next<br />            Else<br />                For $j = $i - 1 To $iStart Step -1<br />                    If (StringCompare($vTmp, $aArrayToSort[$aIndexArray[$j]][$iColumn]) &gt;= 0) Then ExitLoop<br />                    $aIndexArray[$j + 1] = $aIndexArray[$j]<br />                Next<br />            EndIf<br /><br />            $aIndexArray[$j + 1] = $iTmp<br />        Next<br />        Return<br />    EndIf<br /><br />    ; QuickSort<br />    Local $L = $iStart, $R = $iEnd, $vPivot = $aArrayToSort[$aIndexArray[Int(($iStart + $iEnd) / 2)]][$iColumn], $fNum = IsNumber($vPivot)<br />    Do<br />        If $fNum Then<br />            ; While $avArray[$L] &lt; $vPivot<br />            While ($aArrayToSort[$aIndexArray[$L]][$iColumn] &lt; $vPivot And IsNumber($aArrayToSort[$aIndexArray[$L]][$iColumn])) Or (Not IsNumber($aArrayToSort[$aIndexArray[$L]][$iColumn]) And StringCompare($aArrayToSort[$aIndexArray[$L]][$iColumn], $vPivot) &lt; 0)<br />                $L += 1<br />            WEnd<br />            ; While $avArray[$R] &gt; $vPivot<br />            While ($aArrayToSort[$aIndexArray[$R]][$iColumn] &gt; $vPivot And IsNumber($aArrayToSort[$aIndexArray[$R]][$iColumn])) Or (Not IsNumber($aArrayToSort[$aIndexArray[$R]][$iColumn]) And StringCompare($aArrayToSort[$aIndexArray[$R]][$iColumn], $vPivot) &gt; 0)<br />                $R -= 1<br />            WEnd<br />        Else<br />            While (StringCompare($aArrayToSort[$aIndexArray[$L]][$iColumn], $vPivot) &lt; 0)<br />                $L += 1<br />            WEnd<br />            While (StringCompare($aArrayToSort[$aIndexArray[$R]][$iColumn], $vPivot) &gt; 0)<br />                $R -= 1<br />            WEnd<br />        EndIf<br /><br />        ; Swap<br />        If $L &lt;= $R Then<br />            $vTmp=$aIndexArray[$L]<br />            $aIndexArray[$L]=$aIndexArray[$R]<br />            $aIndexArray[$R]=$vTmp<br />            $L+=1<br />            $R-=1<br />        EndIf<br />    Until $L &gt; $R<br /><br />    __ArrayQuickSortIndirect2D($aArrayToSort,$aIndexArray,$iStart,$R,$iColumn)<br />    __ArrayQuickSortIndirect2D($aArrayToSort,$aIndexArray,$L,$iEnd,$iColumn)<br />EndFunc<br /><br />; ===============================================================================================================================<br />; Func _ArraySortIndexes(ByRef $aArrayToSort,$iDescending=0,$iStart=0,$iEnd=-1,$iIndexColumn=0,$iDataColumn=1,$bInitializeIndexes=True)<br />;<br />; Sorts a column in a 2D array which is filled with indexes to itself. Doesn't actually move the rows, but<br />;    changes the values in this column to reflect a proper sorted order.<br />;<br />; $aArrayToSort = the 2D array containing data AND an index column, the latter of which will be sorted<br />; $iDescending = if non-zero, sorts in Descending order, otherwise it sorts in Ascending order<br />; $iStart = start point in $aArrayToSort (where sorting begins)<br />; $iEnd = end point in $aArrayToSort (where sorting stops)<br />; $iIndexColumn = column in 2D array where indexes are located (and rearranged)<br />; $iDataColumn = column in 2D array to look at for comparing/sorting<br />; $bInitializeIndexes = If TRUE, 1st initializes the $aArrayToSort[x][$iIndexColumn] with sequential incrementing indexes,<br />;    preparing it for sorting<br />;<br />; Returns:<br />;    Success: True, with $aArrayToSort[x][$iIndexColumn] now containing a sorted list of indexes<br />;    Failure: False, with @error = 1 (invalid params)<br />;<br />; Author: Ascend4nt, modified from v3.3 _ArraySort() UDF and _ArrayReverse() UDF code - authors of those:<br />;    _ArraySort(): Jos van der Zande, LazyCoder, Tylo, Ultima<br />;    _ArrayReverse(): Brian Keene, Jos van der Zande, Tylo, Ultima<br />; ===============================================================================================================================<br /><br />Func _ArraySortIndexes(ByRef $aArrayToSort,$iDescending=0,$iStart=0,$iEnd=-1,$iIndexColumn=0,$iDataColumn=1,$bInitializeIndexes=True)<br />    If Not IsArray($aArrayToSort) Or UBound($aArrayToSort,0)&lt;&gt;2 Then Return SetError(1,0,False)<br />    <br />    If $iEnd=-1 Then $iEnd=UBound($aArrayToSort)-1<br />    <br />    If $iStart&lt;0 Or $iStart&gt;$iEnd Or $iEnd&gt;UBound($aArrayToSort)-1 Then Return SetError(1,0,False)<br />    <br />    If $iIndexColumn&lt;0 Or $iIndexColumn&gt;UBound($aArrayToSort,2)-1 Then Return SetError(1,0,False)<br />    If $iDataColumn=$iIndexColumn Or $iDataColumn&lt;0 Or $iDataColumn&gt;UBound($aArrayToSort,2)-1 Then Return SetError(1,0,False)<br />    <br />    If $bInitializeIndexes Then<br />        For $i=$iStart To $iEnd<br />            $aArrayToSort[$i][$iIndexColumn]=$i<br />        Next<br />    EndIf<br /><br />    ; Sort<br />    __ArrayQuickSortIndexes($aArrayToSort,$iStart,$iEnd,$iIndexColumn,$iDataColumn)<br />    ; _ArrayReverse() code pulled (and *slightly* modified):<br />    If $iDescending Then<br />        Local $vTmp<br />        ; Reverse<br />        For $i = $iStart To Int(($iStart + $iEnd - 1) / 2)<br />            $vTmp = $aArrayToSort[$i][$iIndexColumn]<br />            $aArrayToSort[$i][$iIndexColumn] = $aArrayToSort[$iEnd][$iIndexColumn]<br />            $aArrayToSort[$iEnd][$iIndexColumn] = $vTmp<br />            $iEnd -= 1<br />        Next<br />    EndIf<br />    Return True    <br />EndFunc<br /><br />; ===============================================================================================================================<br />; Func __ArrayQuickSortIndexes(ByRef $aArrayToSort,ByRef $iStart,ByRef $iEnd,ByRef $iIndexColumn,ByRef $iDataColumn)<br />;<br />; Helper function for _ArraySortIndexes(). This is a modified version of __ArrayQuickSort1D().<br />;<br />; $aArrayToSort = the 2D array containing both Data and Index columns<br />; $iStart = index in $aArrayToSort to start sorting at<br />; $iEnd = index in $aArrayToSort to stop sorting at<br />; $iIndexColumn = column of 2D $aArrayToSort which contains indexes to rearrange<br />; $iDataColumn = column of 2D $aArrayToSort in which comparisons are based on<br />;<br />; Returns: Nothing<br />;<br />; Author: Ascend4nt, modified from v3.3 _ArraySort() UDF helper function __ArrayQuickSort1D() - authors of that:<br />;        Jos van der Zande, LazyCoder, Tylo, Ultima<br />; ===============================================================================================================================<br /><br />Func __ArrayQuickSortIndexes(ByRef $aArrayToSort,ByRef $iStart,ByRef $iEnd,ByRef $iIndexColumn,ByRef $iDataColumn)<br />    If $iEnd &lt;= $iStart Then Return<br />    ; QuickSort<br />    Local $vTmp<br /><br />    ; InsertionSort (faster for smaller segments)<br />    If ($iEnd - $iStart) &lt; 15 Then<br />        Local $i,$j,$vCur,$iTmp<br />        For $i = $iStart + 1 To $iEnd<br />            $iTmp=$aArrayToSort[$i][$iIndexColumn]<br />            $vTmp = $aArrayToSort[$iTmp][$iDataColumn]            <br /><br />            If IsNumber($vTmp) Then<br />                For $j = $i - 1 To $iStart Step -1<br />                    $vCur = $aArrayToSort[$aArrayToSort[$j][$iIndexColumn]][$iDataColumn]<br />                    ; If $vTmp &gt;= $vCur Then ExitLoop<br />                    If ($vTmp &gt;= $vCur And IsNumber($vCur)) Or (Not IsNumber($vCur) And StringCompare($vTmp, $vCur) &gt;= 0) Then ExitLoop<br />                    $aArrayToSort[$j+1][$iIndexColumn] = $aArrayToSort[$j][$iIndexColumn]<br />                Next<br />            Else<br />                For $j = $i - 1 To $iStart Step -1<br />                    If (StringCompare($vTmp, $aArrayToSort[$aArrayToSort[$j][$iIndexColumn]][$iDataColumn]) &gt;= 0) Then ExitLoop<br />                    $aArrayToSort[$j+1][$iIndexColumn] = $aArrayToSort[$j][$iIndexColumn]<br />                Next<br />            EndIf<br /><br />            $aArrayToSort[$j+1][$iIndexColumn] = $iTmp<br />        Next<br />        Return<br />    EndIf<br /><br />    Local $L=$iStart,$R=$iEnd,$vPivot=$aArrayToSort[$aArrayToSort[Int(($iStart+$iEnd) / 2)][$iIndexColumn]][$iDataColumn]<br />    Local $fNum=IsNumber($vPivot)<br />    Do<br />        If $fNum Then<br />            ; While $avArray[$L] &lt; $vPivot<br />            While ($aArrayToSort[$aArrayToSort[$L][$iIndexColumn]][$iDataColumn] &lt; $vPivot And IsNumber($aArrayToSort[$aArrayToSort[$L][$iIndexColumn]][$iDataColumn])) Or (Not IsNumber($aArrayToSort[$aArrayToSort[$L][$iIndexColumn]][$iDataColumn]) And StringCompare($aArrayToSort[$aArrayToSort[$L][$iIndexColumn]][$iDataColumn], $vPivot) &lt; 0)<br />                $L += 1<br />            WEnd<br />            ; While $avArray[$R] &gt; $vPivot<br />            While ($aArrayToSort[$aArrayToSort[$R][$iIndexColumn]][$iDataColumn] &gt; $vPivot And IsNumber($aArrayToSort[$aArrayToSort[$R][$iIndexColumn]][$iDataColumn])) Or (Not IsNumber($aArrayToSort[$aArrayToSort[$R][$iIndexColumn]][$iDataColumn]) And StringCompare($aArrayToSort[$aArrayToSort[$R][$iIndexColumn]][$iDataColumn], $vPivot) &gt; 0)<br />                $R -= 1<br />            WEnd<br />        Else<br />            While (StringCompare($aArrayToSort[$aArrayToSort[$L][$iIndexColumn]][$iDataColumn], $vPivot) &lt; 0)<br />                $L += 1<br />            WEnd<br />            While (StringCompare($aArrayToSort[$aArrayToSort[$R][$iIndexColumn]][$iDataColumn], $vPivot) &gt; 0)<br />                $R -= 1<br />            WEnd<br />        EndIf<br /><br />        ; Swap<br />        If $L &lt;= $R Then<br />            $vTmp=$aArrayToSort[$L][$iIndexColumn]<br />            $aArrayToSort[$L][$iIndexColumn]=$aArrayToSort[$R][$iIndexColumn]<br />            $aArrayToSort[$R][$iIndexColumn]=$vTmp<br />            $L+=1<br />            $R-=1<br />        EndIf<br />    Until $L &gt; $R<br /><br />    __ArrayQuickSortIndexes($aArrayToSort,$iStart,$R,$iIndexColumn,$iDataColumn)<br />    __ArrayQuickSortIndexes($aArrayToSort,$L,$iEnd,$iIndexColumn,$iDataColumn)<br />EndFunc<br /></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-attachments" style="display:none" class="sites-canvas-bottom-no-items">
<div id="sites-attachment-wrapper" class="sites-canvas-bottom-panel-wrapper">
<div jotId="sites-attachment-inner" style="display:none;" class="sites-attachment-inner">
<ul id="JOT_ATTACH_container">
</ul>
</div>
</div>
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments" style="display:none;" class="sites-canvas-bottom-no-items">
<div id="sites-comment-wrapper" class="sites-canvas-bottom-panel-wrapper">
<div jotId="sites-comment-inner" style="display:none;" class="sites-comment-inner">
<div jotId="comments" class="sites-comments">
<div id="_wuid_" jotId="template" class="sites-comment" style="display:none">
<div><strong>_displayNameOrEmail_</strong> - _time_ - <a href="javascript:;" onClick="JOT_postEvent('removeComment', this, {wuid:'_wuid_'});">Remove</a></div>
<p dir="_dir_">_text_</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-subfooter">
<p>
            
                 
                <a href="../../../https@www.google.com/a/universallogin@continue=http_253a_252f_252fsites.google.com_252fsite_252fascend4ntscode_252farraysortindirect&service=jotspot" class="sites-system-link">Sign in</a>
              
            
                 
                <a href="system/app/pages/recentchanges.htm" rel="nofollow" class="sites-system-link">Recent Site Activity</a>
              
            
             
            <a href="javascript:void(window.open('../../../www.google.com/sites/help/intl/en/terms.html'))" class="sites-system-link">Terms</a>
             
            <a href="system/app/pages/reportabuse@src=_2farraysortindirect" rel="nofollow" target="_blank" class="sites-system-link">Report Abuse</a>
            
                 
                <a href="javascript:;" onclick="window.open(webspace.printUrl)" class="sites-system-link">Print page</a>
              
            
            
             | 
            <b class="powered-by">Powered by <a href="../../default.htm">Google Sites</a></b>
</p>
</div>
</div>
</div>
</div>
</div> 
</div> 
</div> 

<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>

<script xmlns="http://www.w3.org/1999/xhtml" src="../../../www.gstatic.com/sites/p/8c5068/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
          var searchBox = new gsites.Searchbox('sites-searchbox-search-button');
          searchBox.initListeners();
          searchBox.setScopesMenu(webspace.page.isSiteRtlLocale);
        </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("2bd", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_2bd');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type;
                      
                      window.jstiming.report(loadTimer);
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();

    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }
 //]]>
</script>
<div id="server-timer-div" style="display:none"> </div>
<script>
          window.jstiming.load.tick('render');
        </script>
</body>
</html>
